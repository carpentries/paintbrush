% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colors.R
\name{carpentries_pal}
\alias{carpentries_pal}
\alias{scale_fill_carpentries}
\alias{scale_color_carpentries}
\title{Carpentries color palette (discrete)}
\usage{
carpentries_pal(n = 100, discrete = TRUE)

scale_fill_carpentries(
  palette = "carpentries_pal",
  alpha = 1,
  discrete = FALSE,
  ...
)

scale_color_carpentries(
  palette = "carpentries_pal",
  alpha = 1,
  discrete = FALSE,
  ...
)
}
\arguments{
\item{discrete}{Logical indicating if the scale should be discrete (default is FALSE).}

\item{palette}{A string specifying the palette to use (default is "carpentries_pal").}

\item{alpha}{Alpha value for transparency (default is 1).}

\item{...}{Additional arguments passed to underlying functions.}
}
\value{
a function that generates a palette of up to 14 colors.

A ggplot2 scale for filling

A ggplot2 scale for filling
}
\description{
This palette includes 14 colors.
}
\examples{

my_palette <- carpentries_pal()
my_palette(3)

library(ggplot2)

Borrowed from the pages of ggplot2
p <- ggplot(mtcars, aes(wt, mpg))
p + geom_point(size = 4, aes(colour = factor(cyl))) +
    scale_color_carpentries(discrete = TRUE) +
    theme_bw()

data <- data.frame(
x = 1:10,
y = seq(1, 5, length.out = 10),
category = factor(rep(1:2, each = 5)))

p_fill_discrete <-  ggplot(data, aes(x, y, fill = category)) +
geom_bar(stat = 'identity') +
scale_fill_carpentries(discrete = TRUE) +
theme_carpentries()

p_fill_discrete

p_fill_continuous <-  ggplot(data, aes(x, y, fill = category)) +
geom_bar(stat = 'identity') +
scale_fill_carpentries(discrete = FALSE) +
theme_carpentries()

p_fill_continuous


data <- data.frame(
x = 1:10,
y = seq(1, 5, length.out = 10),
category = factor(rep(1:2, each = 5)))

p_color_discrete <- ggplot(data, aes(x, y, color = category)) +
geom_line() +
scale_color_carpentries(discrete = TRUE) +
theme_carpentries()

p_color_discrete

p_color_continuous <- ggplot(data, aes(x, y, color = category)) +
geom_line() +
scale_color_carpentries(discrete = FALSE) +
theme_carpentries()

p_color_continuous

}
